const $fetch = ( option = {} ) => {	return fetch( option.url, {		headers: {			'Content-Type': 'application/json',		},		method: option.method ? option.method : 'GET',		body: option.body ? JSON.stringify( option.body ) : null	} )		.then( resp => {			if ( resp.ok ) {				switch ( option.type ) {					case 'json':						return resp.json();					case 'text':						return resp.text();					case 'blob':						return resp.blob();					default:						return resp.json();				}			} else {				throw new Error( resp.status + ' ' + resp.url );			}		} )}const uuid = () => {	return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace( /[xy]/g, ( c ) => {		let r = Math.random() * 16 | 0, v = c === 'x' ? r : ( r & 0x3 | 0x8 );		return v.toString( 16 );	} );};export { $fetch, uuid };