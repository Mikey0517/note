import React, { Component } from "react";import { Avatar, Button, Modal, Input, Space } from 'antd';import { UserOutlined, LockOutlined } from '@ant-design/icons';import "../style/login.css";class Login extends Component {	constructor ( props ) {		super( props );		this.state = {			isLogin: false,			visible: false		};		this.param = {			username: "",			password: ""		}	}	componentDidMount () {		this.getLoginStatus();	}	componentWillReceiveProps ( nextProps, nextContext ) {		this.getLoginStatus();	}	getLoginStatus () {		const { isLogin } = this.state;		const result = localStorage.getItem( "token" ) !== null;		isLogin !== result && this.setState( { isLogin: result } );	}	handleToggle ( visible ) {		this.setState( { visible } );	}	loginPost () {		fetch( '/api/login', {			headers: {				'Content-Type': 'application/json',			},			method: 'POST',			body: JSON.stringify( this.param )		} )		.then( resp => {			if ( resp.ok ) {				return resp.json();			} else {				throw new Error( resp.status + ' ' + resp.url );			}		} )		.then( data => {			console.log( data )		} );	}	handleBlur ( name, e ) {		this.param[ name ] = e.target.value;	}	render () {		const { isLogin, visible } = this.state;		return (			<div className="login-wrap">				{					isLogin ?						<Avatar icon={ <UserOutlined/> }/>						:						<div>							<Button type="link" onClick={ this.handleToggle.bind( this, true ) }>登录</Button>							<Modal								title="登录"								cancelText="取消"								okText="登录"								visible={ visible }								destroyOnClose={ true }								closable={ false }								onCancel={ this.handleToggle.bind( this, false ) }								onOk={ this.loginPost.bind( this ) }							>								<Space direction="vertical" style={ { width: '80%', margin: "0 10%" } } size="middle">									<Input										placeholder="输入账号"										prefix={ <UserOutlined className="site-form-item-icon"/> }										onBlur={ this.handleBlur.bind( this, 'username' ) }									/>									<Input.Password										placeholder="输入密码"										prefix={ <LockOutlined className="site-form-item-icon"/> }										onBlur={ this.handleBlur.bind( this, 'password' ) }									/>								</Space>							</Modal>						</div>				}			</div>		)	}}export default Login;