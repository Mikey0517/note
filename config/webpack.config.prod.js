const HtmlWebpackPlugin = require( 'html-webpack-plugin' );const ExtractTextPlugin = require( 'extract-text-webpack-plugin' );const BundleAnalyzerPlugin = require( 'webpack-bundle-analyzer' ).BundleAnalyzerPlugin;const merge = require( 'webpack-merge' );const { CleanWebpackPlugin } = require( 'clean-webpack-plugin' );const baseConfig = require( './webpack.config.base' );const config = require( '../config/config.js' );const utils = require( './utils' );const mode = 'production';let buildConfig = {	output: {		filename: utils.assetsPath( 'js/[name].[hash:8].js' ),		chunkFilename: utils.assetsPath( 'js/[name]-[hash:8].js' )	},	devtool: 'cheap-module-eval-source-map',	module: {		rules: [			{				test: /\.css$/,				use: ExtractTextPlugin.extract( {					fallback: "style-loader",					use: "css-loader"				} )			},		]	},	plugins: [		new CleanWebpackPlugin(),		new ExtractTextPlugin( {			filename: utils.assetsPath( 'css/[name]-[hash:8].css' )		} ),		new HtmlWebpackPlugin( {			filename: config.build.index,			template: 'index.html',			inject: true,			minify: {				removeComments: true,				collapseWhitespace: true,				removeAttributeQuotes: true			},			chunksSortMode: 'auto'		} ),		new BundleAnalyzerPlugin( {			analyzerHost: '127.0.0.1', // 分析界面的启动url地址			analyzerPort: 8888,			openAnalyzer: false		} )	],	stats: {		colors: true,		modules: false,		children: false,		chunks: false,		chunkModules: false,		warnings: false	}};module.exports = merge( baseConfig( mode ), buildConfig );