const webpack = require( 'webpack' );const path = require( 'path' );const HtmlWebpackPlugin = require( 'html-webpack-plugin' );const MiniCssExtractPlugin = require( 'mini-css-extract-plugin' );const merge = require( 'webpack-merge' );const baseConfig = require( './webpack.config.base' );const utils = require( './utils' );const mode = 'development';const devConfig = {	entry: {		app: [			'webpack-hot-middleware/client?noInfo=true&reload=true'		],	},	devtool: 'eval-source-map',	module: {		rules: [			{				test: /\.css$/,				exclude: /node_modules/,				include: path.join( __dirname, '../src' ),				use: [					MiniCssExtractPlugin.loader,					"css-loader",					{						loader: "postcss-loader",						options: {							config: {								path: "./config/postcss.config.js" // 写到目录即可，文件名强制要求是postcss.config.js							}						}					},				]			},			{				test: /antd.*\.less$/,				exclude: [ /src/ ],				use: [					MiniCssExtractPlugin.loader,					'css-loader',					{						loader: "postcss-loader",						options: {							config: {								path: "./config/postcss.config.js" // 写到目录即可，文件名强制要求是postcss.config.js							}						}					},					{						loader: 'less-loader',						options: {							sourceMap: true,							lessOptions: {								javascriptEnabled: true							}						}					},				]			}		]	},	plugins: [		new webpack.HotModuleReplacementPlugin(),		new MiniCssExtractPlugin( {			filename: utils.assetsPath( 'css/[name]-[hash:8].css' ),			chunkFilename: utils.assetsPath( 'css/[name]-[hash:8].css' ),		} ),	]};module.exports = merge( baseConfig( mode ), devConfig );